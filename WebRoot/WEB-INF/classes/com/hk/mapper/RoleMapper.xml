<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hk.mapper.RoleMapper" >
  <select id="getAllRoles" resultType="roleQuery">
 		select * from t_role where isDel = 1 limit #{startIndex},#{rows}
 	</select>
 	<select id="getRolesCount" resultType="int">
 		select count(*) from t_role where isDel = 1
 	</select>
 	<select id="getRoleByEmployeeId" parameterType="int" resultType="roleQuery">
 		select * from t_role r join t_employee e 
 			on r.roleId=e.roleId where e.employeeId=#{employeeid} 
 	</select>
 	<select id="getRolesUnSelectedByEmployeeId" parameterType="int" resultType="roleQuery">
 		select * from t_role where roleId not in 
 		(select roleId from t_employee where employeeId=#{employeeId})
 	</select>
 	<select id="getRolesCountUnSelectedByEmployeeId" parameterType="int" resultType="int">
	 	select count(*) from t_role where roleId not in 
 		(select roleId from t_employee where employeeId=#{employeeId})
 	</select>
 	
 	<select id="getResourcePrivilegeRelate" parameterType="int" resultType="privilegeQuery">
 	 	select p.* from t_privilege p join t_role_privilege rp
 	 	on p.privilegeId = rp.privilege_id
 	 	join t_role r
 	 	on rp.role_id = r.roleId 
 	 	where r.roleId = #{roleId} and rp.isDel = 1
 	</select>
 	<select id="getResourcePrivilegeRelateCount" parameterType="int" resultType="int">
 	 	select count(*) from t_privilege p join t_role_privilege rp 
 	 	on p.privilegeId = rp.privilege_id
 	 	join t_role r
 	 	on rp.role_id = r.roleId 
 	 	where r.roleId = #{roleId} and rp.isDel = 1
 	</select>
 	<select id="getPrivilegeUnRelated" parameterType="roleQuery" resultType="privilegeQuery">
 		 select * from t_privilege where privilegeId not in 
 		 	(select privilege_id from t_role_privilege where role_id = #{roleid} and isDel = 1) limit #{startIndex},#{rows}
 	</select>
 	<select id="getPrivilegeCountUnRelated" parameterType="roleQuery" resultType="int">
 		 select count(*) from t_privilege where privilegeId not in 
 		 	(select privilege_id from t_role_privilege where role_id = #{roleid} and isDel = 1) 
 	</select> 
 	
	<insert id="addPrivilegeRoleRelate" parameterType="roleQuery">
		insert into t_role_privilege (role_id,privilege_id,isDel) 
			values (#{roleid},#{privilegeIdRelated},1)
	</insert>

 <insert id="addRole" parameterType="roleQuery" >
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleid != null" >
        roleId,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="isdel != null" >
        isDel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="deleteRoles" parameterType="int">
  	update t_role set isDel = 0 where roleid in 
  	<foreach open="(" separator="," close=")" item="id" collection="list">
  			#{id}
  	</foreach>
  </update>
 <update id="modifyRole" parameterType="roleQuery" >
    update t_role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        isDel = #{isdel,jdbcType=CHAR},
      </if>
    </set>
    where roleId = #{roleid,jdbcType=INTEGER}
  </update>
  
  <update id="modifyEmployeeRole" parameterType="employeeQuery">
  	 update t_employee set roleId = #{roleid} where employeeid = #{employeeid} and isDel= 1
  </update>
  
  <update id="deleteRolePrivilegeRelate" parameterType="roleQuery">
  	update t_role_privilege set isDel = 0 where role_id=#{roleid} and privilege_id in 
  	<foreach open="(" separator="," close=")" item="privilege" collection="privilegeIds">
  			#{privilege}
  	</foreach>
  </update>
  
  
  
  
  
  
  
  
  
</mapper>